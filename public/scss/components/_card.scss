// CARD

// Component-specific breakpoints

$card-breakpoint-medium: 850px;
$card-breakpoint-large: 1000px; 
$card-mini-max-width: 300px;

// BASE CARD STYLING
// 1. Transition for card states
// 2. Crop the content inside following border-radius
// 3. Fix chrome bug where images don't get cropped with overflow: hidden;
// 4. Make the card fill it's parent. Control layout with layout classes.
// 5. Solve flickering issues in Chrome when enabled/disabled.

.c-card {
  background: $color-white;
  border-radius: 3px;
  box-shadow: 0 20px 30px 0 rgba($color-black, .10);
  transition: $wcss-base-transition; // [1]
  overflow: hidden; // [2]
  perspective: 1px; // [3]
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%; // [4]
  height: 100%; // [4]
  backface-visibility: hidden; // [5]
}

.c-card__cover,
.c-card__inner {
  flex: 1 0 auto;
  flex-basis: 100%;
}

// Cover
// 1. Set up a positioning context to crop the image
// 2. Assing a min-height value since our image is absolute-positioned
// 3. Crop crop crop

.c-card__cover {
  position: relative; // [1]
  min-height: 150px; // [2]
  overflow: hidden; // [3]

  @include wcss-media($card-breakpoint-medium) {
    min-height: 250px;
  }
}

// 1. Position cover image
// 2. Make cover image fill the entire space
// 3. Prevent images from stretching too much

.c-card__cover__img {
  position: absolute; // [1]
  top: 50%; // [1]
  left: 50%; // [1]
  transform: translate(-50%, -50%); // [1]
  max-width: none; // [2]
  min-height: 100%; // [2]
  min-width: 100%; // [2]
  max-width: 250%; // [3]
}

// Inner
// 1. Set up a positioning context for card icon

.c-card__inner {
  position: relative; // [1]
  display: flex;
  flex-direction: column;
}

// Card Title

.c-card__title {
  font-family: $font-serif;
  font-weight: bold;
  margin-bottom: $wcss-spacing-unit-small;
  transition: color 0.2s;
  @include wcss-theme-var(color, --tertiary);
/*
  .t-blue & {
    color: map-get($theme-blue, primary);
  }

  .t-light-blue & {
    color: map-get($theme-light-blue, tertiary);
  }

  .t-green & {
    color: map-get($theme-green, tertiary);
  }

  .t-purple & {
    color: map-get($theme-purple, secondary);
  }

  .t-neutral & {
    color: map-get($theme-neutral, tertiary);
  }
*/
}

.c-card__title--separated {
  // Separator line at the bottom of card titles
  // 1. Make separator color the same as text color
  // 2. Still make separator color a tad lighter

  &:after {
    content: '';
    width: 80px;
    height: 1px;
    background: currentColor; // [1]
    opacity: 0.5; // [2]
    margin: $wcss-spacing-unit 0;
    display: block;
    position: relative;
  }
}

// Current Card Text

.c-card__current-card {
  text-transform: uppercase;
  letter-spacing: 1px;
  font-family: $font-sans;
  font-weight: bold;
  margin-bottom: $wcss-spacing-unit-small;
  @include wcss-font-size(eta);
}

// Icon

.c-card__icon.c-card__icon {
  position: relative;
  display: block;
  margin: -(91px/2) auto 0 auto;
  width: 91px;
  height: 91px;
}

// Text

.c-card__text {
  margin-bottom: $wcss-spacing-unit;

  > p {
    margin-bottom: $wcss-spacing-unit-tiny;

    &:last-child {
      margin-bottom: 0;
    }
  }
}

// Helper Text

.c-card__helper {
  color: $color-light-gray;

  // Separator line on top of helper text
  // 1. Make separator color the same as text color
  // 2. Still make separator color a tad lighter

  &:before {
    content: '';
    width: 80px;
    height: 1px;
    background: currentColor; // [1]
    opacity: 0.5; // [2]
    margin-bottom: $wcss-spacing-unit-small;
    display: block;
    position: relative;
  }
}

// Actions
// 1. Make items adjust automatically

.c-card__actions {
  display: flex;
  flex-wrap: wrap;
  margin-top: auto;

  > * {
    flex: 1 1 auto; // [1]
    border-radius: 0 !important; // [1]
  }
}

// Card states
// 1. Disable button clicks when disabled
.c-card.is-disabled {
  opacity: 0.5;

  .c-card__actions {
    pointer-events: none; // [1]
  }
}


// FULL CARD VARIANT

.c-card--full {

  > .c-card__cover {

    @include wcss-media($card-breakpoint-medium) {
      flex-basis: 35%;
      width: 35%;
    }

    @include wcss-media($card-breakpoint-large) {
      flex-basis: 25%;
      width: 25%;
    }
  }

  > .c-card__inner {

    @include wcss-media($card-breakpoint-medium) {
      flex-basis: 65%;
      width: 65%;
    }

    @include wcss-media($card-breakpoint-large) {
      flex-basis: 75%;
      width: 75%;
    }
  }

  // 1. Higher horizontal padding to make space for the card icon
  // 2. Higher top padding for aesthetic purposes
  .c-card__content {

    padding: $wcss-spacing-unit;

    @include wcss-media($card-breakpoint-medium) {
      padding: $wcss-spacing-unit-large; // [1]
    }

    @include wcss-media($card-breakpoint-large) {
      padding: $wcss-spacing-unit-large $wcss-spacing-unit-large * 1.5 $wcss-spacing-unit $wcss-spacing-unit-large * 1.5; // [1]
    }
  }

  // 1. Compensate for card content padding
  // 2. Align icon horizontally in the middle of cover/content
  // 3. Remove mobile top negative margin

  .c-card__icon {

    @include wcss-media($card-breakpoint-medium) {
      position: absolute;
      top: $wcss-spacing-unit; // [1]
      left: 0; // [2]
      transform: translateX(-50%); // [2]
      margin: 0; // [3]
    }
  }

  .c-card__title {
    @include wcss-font-size(alpha);
  }

  .c-card__text {
    @include wcss-font-size(epsilon);

    > * + * {
      margin-top: $wcss-spacing-unit;
    }
  }

  .c-card__helper {
    @include wcss-font-size(zeta);
  }
}





// MINI CARD VARIANT

.c-card--mini {

  max-width: $card-mini-max-width;
  overflow: visible;

  .c-card__content {
    padding: $wcss-spacing-unit-small;
  }

  .c-card__actions {
    overflow: hidden;
    border-bottom-left-radius: $wcss-base-radius;
    border-bottom-right-radius: $wcss-base-radius;
  }

  .c-card__title {
    @include wcss-font-size(delta);
    margin-bottom: $wcss-spacing-unit-small;
  }

  .c-card__text,
  .c-card__helper {
    @include wcss-font-size(eta);
  }
}
