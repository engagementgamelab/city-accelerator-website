// WRAPPER

// Page-level constraining and wrapping elements.

$wcss-wrapper-width: 1200px !default;

/* stylelint-disable */
@if (type-of($wcss-wrapper-width) != number) {
  @error "`#{$wcss-wrapper-width}` needs to be a number."
}
/* stylelint-enable */

@mixin wcss-wrapper($breakpoint: null) {

  .o-wrapper#{$breakpoint} {
    @include wcss-clearfix();
    padding-right: $wcss-spacing-unit;
    padding-left:  $wcss-spacing-unit;
    margin-right: auto;
    margin-left:  auto;
    width: 100%;
    max-width: $wcss-wrapper-width;
  }





  // SIZE VARIANTS

  .o-wrapper--tiny#{$breakpoint} {
    padding-right: $wcss-spacing-unit-tiny;
    padding-left:  $wcss-spacing-unit-tiny;
  }

  .o-wrapper--small#{$breakpoint} {
    padding-right: $wcss-spacing-unit-small;
    padding-left:  $wcss-spacing-unit-small;
  }

  .o-wrapper--large#{$breakpoint} {
    padding-right: $wcss-spacing-unit-large;
    padding-left:  $wcss-spacing-unit-large;
  }

  .o-wrapper--huge#{$breakpoint} {
    padding-right: $wcss-spacing-unit-huge;
    padding-left:  $wcss-spacing-unit-huge;
  }
}

@include wcss-wrapper();

@each $name, $value in $wcss-breakpoints {
  @include wcss-media($name) {
    @include wcss-wrapper(\@#{$name});
  }
}
